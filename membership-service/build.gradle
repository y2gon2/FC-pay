plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id "com.palantir.docker" version "0.35.0"
}

group = 'dev.be.membership'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'// import javax.validation.*;

    // for swagger-ui / swagger2
    // http://localhost:8080/swagger-ui.html 로 접속
    // reference : https://colabear754.tistory.com/99
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    implementation project(path: ':common')
    testImplementation 'junit:junit:4.13.1'

    compileOnly 'org.projectlombok:lombok'

    // H2 -> MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'
//    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

// docker
docker {
    println(tasks.bootJar.outputs.files)                    // for debugging
    name "fc-pay"+'-'+project.name + ":" + version  // image name
    dockerfile file('../Dockerfile')                         // 사용할 docker file
    files tasks.bootJar.outputs.files                       // Dockerfile 설정을 사용하여 복사할 파일들
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name]) // Dockerfile 에 전달할 인자
}